version: "3"

services:
  mongo1:
    image: mongo:4.4
    container_name: mongo1
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root123    
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001", "--keyFile", "/opt/mongo.key"]
    volumes:
      - ./data/mongo-1:/data/db
      - ./mongo.key:/opt/mongo.key
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:4.4
    container_name: mongo2
    #    environment:
    #      MONGO_INITDB_ROOT_USERNAME: root
    #      MONGO_INITDB_ROOT_PASSWORD: root123    
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002", "--keyFile", "/opt/mongo.key"]
    volumes:
      - ./data/mongo-2:/data/db
      - ./mongo.key:/opt/mongo.key
    ports:
      - 30002:30002

  mongo3:
    image: mongo:4.4
    container_name: mongo3
    #    environment:
    #      MONGO_INITDB_ROOT_USERNAME: root
    #      MONGO_INITDB_ROOT_PASSWORD: root123    
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003", "--keyFile", "/opt/mongo.key"]
    volumes:
      - ./data/mongo-3:/data/db
      - ./mongo.key:/opt/mongo.key
    ports:
      - 30003:30003
